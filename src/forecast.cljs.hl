(page "forecast.html"
  (:require [clojure.string :as str]
            [cljsjs.pako]
            [goog.crypt.base64 :as base64]
            [longshi.core :as fress]
            [taoensso.timbre :as log
             :refer-macros (log trace debug info warn error fatal report
                                logf tracef debugf infof warnf errorf fatalf reportf
                                spy get-env log-env)]
            [weathergen.coordinates :as coords]
            [weathergen.database :as db]
            [weathergen.math :as math]
            [weathergen.model :as model]
            [weathergen.ui :as ui])
  (:require-macros
   [cljs.core.async.macros :refer [go go-loop]]
   [weathergen.cljs.macros :refer [with-time formula-of]]))

(let [inflate #(.inflate js/pako %)
      {:keys [weather-params
              display-params
              movement-params]}
      (-> js/window
          .-location
          .-search
          (subs (count "?data="))
          base64/decodeStringToUint8Array
          inflate
          fress/read)]
  (dosync
   (reset! ui/weather-params weather-params)
   (reset! ui/display-params
           (assoc
            display-params
            :dimensions
            [ui/initial-size ui/initial-size]))
   (reset! ui/movement-params movement-params)
   (reset! ui/time-params {:displayed (-> weather-params :time :current)})
   (swap! ui/weather-params
          (fn [wp]
            (-> wp
                (assoc-in
                 [:time :max]
                 (-> wp :time :current))
                (update
                 :wind-stability-areas
                 (fn [areas]
                   (map (fn [area]
                          (dissoc area :editing?))
                        areas)))
                (update
                 :weather-overrides
                 (fn [overrides]
                   (map (fn [override]
                          (dissoc override :editing?))
                        overrides))))))))

(log/debug "Editing?" (-> @ui/weather-params :weather-overrides first :editing?))

(ui/weather-page
 :display-controls {:prevent-map-change? true}
 :step-controls {:mode :browse}
 :forecast-section {:forecast-link? false}
 :flightpath-controls {})
